# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hssh < Formula
  desc "A CLI to easily sync, list, search and connect to SSH hosts"
  homepage ""
  version "1.1.1"
  license "MIT"
  bottle :unneeded

  if OS.mac? && Hardware::CPU.intel?
    url "https://github.com/heply/hssh/releases/download/1.1.1/hssh_1.1.1_darwin_amd64.tar.gz"
    sha256 "5560117bc9f9f205734efbd6da85c9827cc439c0f92ae5ba94e4ee00fe30c26d"
  end
  if OS.mac? && Hardware::CPU.arm?
    url "https://github.com/heply/hssh/releases/download/1.1.1/hssh_1.1.1_darwin_arm64.tar.gz"
    sha256 "64a28bc1a1977ccad378da3d6537925d199965f0ed7a836a77cc03d770e9c6c8"
  end
  if OS.linux? && Hardware::CPU.intel?
    url "https://github.com/heply/hssh/releases/download/1.1.1/hssh_1.1.1_linux_amd64.tar.gz"
    sha256 "c2042bb367f6a6a9389dfbf38fe3fa87767de2c01b368b645ee6d65b86ebd93f"
  end
  if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
    url "https://github.com/heply/hssh/releases/download/1.1.1/hssh_1.1.1_linux_arm64.tar.gz"
    sha256 "8d25212a055a897ff21a8063197d9aa3f2cf54a7b91587471ba4db4adc4b3ff4"
  end

  depends_on "fzf"

  def install
    bin.install "hssh"
  end

  def caveats; <<~EOS
    Run `hssh init` to generate config file inside
     `~/.config/hssh/config.yml` (works only if not exists yet)
     or let the CLI creating it automatically on first run (every command).

     Type `hssh help` for further information.
  EOS
  end
end

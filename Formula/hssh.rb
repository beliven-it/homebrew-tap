# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hssh < Formula
  desc "A CLI to easily sync, list, search and connect to SSH hosts"
  homepage ""
  version "1.1.3"
  license "MIT"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/heply/hssh/releases/download/1.1.3/hssh_1.1.3_darwin_amd64.tar.gz"
      sha256 "b865b0d81871bc592d6ea7446fe0df372c4527ebb136c482e58354f1dc37f30b"
    end
    if Hardware::CPU.arm?
      url "https://github.com/heply/hssh/releases/download/1.1.3/hssh_1.1.3_darwin_arm64.tar.gz"
      sha256 "9c239d07af3e01a2f9053568dc8affd550a0a1cd1c2cfc46136ac76a7d6f403b"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/heply/hssh/releases/download/1.1.3/hssh_1.1.3_linux_amd64.tar.gz"
      sha256 "ea3473ad9abcfe5254c9571a30bd3252086fef5159e01fb9aa1d59642e73d7d2"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/heply/hssh/releases/download/1.1.3/hssh_1.1.3_linux_arm64.tar.gz"
      sha256 "974706e40c7080d0d38741b78b35c1feedfed077f56d22059ea47a2347b87cab"
    end
  end

  depends_on "fzf"

  def install
    bin.install "hssh"
  end

  def caveats; <<~EOS
    Run `hssh init` to generate config file inside
     `~/.config/hssh/config.yml` (works only if not exists yet)
     or let the CLI creating it automatically on first run (every command).

     Type `hssh help` for further information.
  EOS
  end
end
